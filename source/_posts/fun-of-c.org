#+TITLE:       Funny of C
#+AUTHOR:      Kyle Three Stones
#+DATE:        [2018-05-29 Tue]
#+EMAIL:       kyleemail@163.com
#+OPTIONS:     H:3 num:nil toc:nil \n:nil @:t ::t |:t ^:t f:t TeX:t
#+TAGS:        C
#+CATEGORIES:  language


** 字符串


** 指针

** 链表
#+BEGIN_SRC C
#include <stdlib.h>
#include <stdio.h>

typedef struct NODE {
    struct NODE *link;
    int value;
} Node;

//The key is to use the address of the pointer to the node 
//which is the address of node->link
int insert(Node **linkp, int new_value)
{
    Node *current;
    Node *new;

    while( ( current = *linkp ) != NULL 
            &&  current->value < new_value )
    {
        linkp = &current->link;
    }

    new = (Node *)malloc(sizeof(Node));
    if(NULL == new)
    {
        return -1;
    }

    new->value = new_value;

    new->link = current;
    *linkp = new;

    return 1;

}

void printLink(Node **root)
{
    while(*root != NULL)
    {
        printf("%d ", (*root)->value);
        *root = ((*root)->link);
    }
}

int main()
{
    Node *proot = NULL;
 
    insert(&proot, 5);
    insert(&proot, 9);
    insert(&proot, 1);
    insert(&proot, 4);
    insert(&proot, 3);
    insert(&proot, 7);

    printLink(&proot);

    printf("\n");

    return 0;
}

#+END_SRC
